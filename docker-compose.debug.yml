version: '3.4'

services:
  # 定义一个名为 dockerdebugtest02 的服务
  dockerdebugtest02:
    # 从 Dockerfile 构建镜像
    image: dockerdebugtest02
    build:
      context: .
      dockerfile: ./Dockerfile
    # 在容器内运行的命令
    command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m flask run --no-debugger --no-reload --host 0.0.0.0 --port 5002"]
    # 将容器内的 5002 端口映射到主机的 5002 端口，将容器内的 5678 端口映射到主机的 5678 端口
    ports:
      - 5002:5002
      - 5678:5678
    # 定义环境变量 FLASK_APP，指定 Flask 应用程序的入口模块为 app.py
    environment:
      - FLASK_APP=-m app.py
    # -m 是 Python 命令行参数的一种，表示要导入并执行一个 Python 模块。在这里，FLASK_APP=-m app.py 中的 -m 表示要导入并执行 app.py 
    # 这个模块作为 Flask 应用程序的入口点。
    # 也就是说，通过 FLASK_APP=-m app.py 设置环境变量，告诉 Flask 在启动时要加载 app.py 这个模块，并将其作为应用程序对象。
